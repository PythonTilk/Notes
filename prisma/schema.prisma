// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum NoteType {
  TEXT
  RICH_TEXT
  CODE
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id                   Int       @id @default(autoincrement())
  email                String    @unique
  name                 String?
  password             String
  biography            String?   @db.Text
  avatar               String? // URL to the avatar image
  role                 UserRole  @default(USER)
  passwordResetToken   String?   @unique
  passwordResetExpires DateTime? 
  emailVerified        Boolean   @default(false)
  emailVerificationToken String? @unique
  authoredNotes        Note[] // Notes authored by this user
  sharedNotes          NoteShare[] // Notes shared with this user through the join table
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?  @db.Text
  published Boolean  @default(false)
  type      NoteType @default(TEXT)
  imageUrls String[] // Array of image URLs
  tags      String[] // Array of tags
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  sharedWith NoteShare[] // Users this note is shared with through the join table
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NoteShare {
  note      Note @relation(fields: [noteId], references: [id])
  noteId    Int
  user      User @relation(fields: [userId], references: [id])
  userId    Int

  @@id([noteId, userId]) // Composite primary key
}

model BannedEmail {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now())
}